plugins {
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'maven-publish'
    id 'jacoco'
    id "com.jfrog.bintray" version "1.8.4"
}

ext {
    // バージョン定義
    versionMajor = 0
    versionMinor = 0
    versionPatch = 1

    // アーティファクト関連
    group 'com.epion_t3'
    version "${versionMajor}.${versionMinor}.${versionPatch}"

    // Document
    siteUrl = 'https://docs.epion-t3.com'

    // SCM（GitHub）
    githubUrl = 'https://github.com/epion-tropic-test-tool/epion-t3-core'
}

repositories {
    maven {
        url "https://dl.bintray.com/epion-tropic-test-tool/maven"
    }
    mavenCentral()
    jcenter()
}

dependencies {

    // Core Library
    implementation 'com.epion_t3:epion-t3-core:0.0.1'

    // SSH
    compile('org.apache.sshd:sshd-core:1.4.0')
    compile('ch.ethz.ganymed:ganymed-ssh2:build210')

    // For Develop
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    testCompile 'junit:junit:4.12'

}

// JavaDoc
tasks.withType(Javadoc) {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
    options.addBooleanOption('Xdoclint:none', true)
}

// Java
tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    it.options.encoding = 'UTF-8'
}

// JavaDoc Jar packaging
task packageJavadoc(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// Source Jar Packaging
task packageSources(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'source'
}

artifacts {
    archives packageJavadoc
    archives packageSources
}

// CodeCov
task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination project.file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

// Library Publish
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'epion-tropic-test-tool'
        licenses = ['Apache2']
        websiteUrl = siteUrl
        issueTrackerUrl = githubUrl + '/blob/master/LICENSE'
        vcsUrl = githubUrl + '.git'
        issueTrackerUrl = githubUrl + '/issues'
        publicDownloadNumbers = true
        version {
            name = project.version
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name project.name
            url siteUrl

            packaging 'jar'
            groupId project.group
            artifactId project.name
            version project.version

            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'http://www.apache.org/licenses/'
                    distribution 'repo'
                }
            }
            scm {
                connection githubUrl + '.git'
                url githubUrl
            }
        }
    }
}









